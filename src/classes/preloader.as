package  {	import flash.display.MovieClip;	import flash.display.Loader;	import flash.events.Event;	import flash.events.IOErrorEvent;	import flash.events.ProgressEvent;	import flash.events.HTTPStatusEvent;	import flash.events.IEventDispatcher;	import flash.net.URLRequest;	import flash.net.URLLoader;	import flash.errors.IOError;		public class preloader extends MovieClip 	{		public function preloader() 		{			init ();		}		public function init ():void		{			var game_loader:Loader = new Loader();			enableListeners(game_loader.contentLoaderInfo);			game_loader.load(new URLRequest("GameScreen.swf") );		}				private function enableListeners( dispatcher:IEventDispatcher ):void		{			dispatcher.addEventListener(Event.COMPLETE, fileLoaded);			dispatcher.addEventListener(ProgressEvent.PROGRESS, progressHandler);			dispatcher.addEventListener(HTTPStatusEvent.HTTP_STATUS, http StatusHandler);			dispatcher.addEventListener(EVENT.INIT, initHandler);			dispatcher.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);			dispatcher.addEventListener(Event.OPEN, openHandler);			dispatcher.addEventListener(Event.UNLOAD, unLoadHandler);												}				private function enableListeners( dispatcher:IEventDispatcher ):void		{			dispatcher.addEventListener(Event.COMPLETE, fileLoaded);			dispatcher.addEventListener(ProgressEvent.PROGRESS, progressHandler);						/*dispatcher.addEventListener(HTTPStatusEvent.HTTP_STATUS, http StatusHandler);			dispatcher.addEventListener(EVENT.INIT, initHandler);			dispatcher.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);			dispatcher.addEventListener(Event.OPEN, openHandler);			dispatcher.addEventListener(Event.UNLOAD, unLoadHandler);		}*/				private function httpStatusHandler(ev:HTTPStatusEvent):void {trace("httpStatusHandler:" +ev);}				private function initHandler(ev:Event):void {trace("initHandler:" +ev);}				private function ioErrorHandler(ev:IOErrorEvent):void { trace("ioErrorhandler:" +ev);}				private function openHandler(ev:Event):void { trace("openHandler:" +ev);}				private function unLoadHandler(ev:Event):void { trace("unLoadHandler:" +ev);}				private function progressHandler (ev:ProgressEvent):void		{			var comp:Number = ev:bytesLoaded / bytesTotal;			var percent:int = Math.round(comp * 100);						updatePreloaderBar();		}				private function updatePreLoaderBar (comp:Number):void		{			preloader_bar.scaleX = comp;		}				private function removePreloaders():void		{			removeChild(preloader_bar);		}				private function fileLoaded(ev:Event):void		{			disableListeners(ev.currentTarget as IEventDispatcher);			remove Preloaders()						var game_mc:Loader = ev.currentTarget.loader as Loader;			addChild(game_mc);			//MovieClip(game_mc.content).init(  );		} 	}	}